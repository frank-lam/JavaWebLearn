package lesson01;

import java.util.concurrent.Executors;

public class Demo01 {

	public static void main(String[] args) {
		//Java设计模式-工厂设计模式
		/**
		 * 工厂设计模式
		 * 1.工厂方法模式
		 * 2.简单工厂模式 Executors.newCachedThreadPool();
		 */
		//Executors.newCachedThreadPool();
		// 1.工厂方法模式
/*		1.工厂方法模式概述
		    >工厂方法模式中抽象工厂类负责定义创建对象的接口，
		    >具体对象的创建工作由继承抽象工厂的具体类实现。
		2.优点
		    客户端不需要在负责对象的创建，从而明确了各个类的职责
		     如果有新的对象增加，只需要增加一个具体的类和具体的工厂类即可，不影响已有的代码
		     后期维护容易，增强了系统的扩展性
		3.缺点
		   需要额外的编写代码，增加了工作量*/
		
		
		//以前创建对象
		Dog dog = new Dog();
		Pig pig = new Pig();
		dog.eat();
		pig.eat();
		
		//使用工厂方法模式创建对象
		DogFactory dogFactory = new DogFactory();
		Dog dog1 = dogFactory.createAnimal();
	}
}
